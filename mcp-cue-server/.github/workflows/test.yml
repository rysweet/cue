name: Test MCP Server

on:
  push:
    paths:
      - 'mcp-blarify-server/**'
  pull_request:
    paths:
      - 'mcp-blarify-server/**'

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      neo4j:
        image: neo4j:5-community
        env:
          NEO4J_AUTH: neo4j/testpassword
          NEO4J_PLUGINS: '["apoc", "graph-data-science"]'
          NEO4J_dbms_security_procedures_unrestricted: apoc.*,gds.*
        ports:
          - 7474:7474
          - 7687:7687
        options: >-
          --health-cmd "curl -f http://localhost:7474 || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      working-directory: ./mcp-blarify-server
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest-cov
    
    - name: Wait for Neo4j
      run: |
        timeout 60 bash -c 'until curl -f http://localhost:7474; do sleep 2; done'
    
    - name: Set up test data
      working-directory: ./mcp-blarify-server
      run: python tests/setup_test_graph.py
    
    - name: Run unit tests
      working-directory: ./mcp-blarify-server
      run: |
        python -m pytest tests/test_query_builder.py tests/test_context_builder.py tests/test_llm_processor.py tests/test_server.py -v
    
    - name: Run integration tests
      working-directory: ./mcp-blarify-server
      env:
        NEO4J_URI: bolt://localhost:7687
        NEO4J_USERNAME: neo4j
        NEO4J_PASSWORD: testpassword
      run: |
        python -m pytest tests/test_integration.py -v
    
    - name: Generate coverage report
      working-directory: ./mcp-blarify-server
      run: |
        python -m pytest --cov=src --cov-report=xml --cov-report=html
    
    - name: Upload coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./mcp-blarify-server/coverage.xml